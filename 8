openssl s_client -showcerts -connect example.com:443 -servername example.com </dev/null 2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > site-chain.pem
openssl s_client -showcerts -connect example.com:443 -servername example.com </dev/null
sudo cp customCA.crt /usr/local/share/ca-certificates/
sudo update-ca-certificates


# SslForceVersion IS NOT SUPPORTED ANYMORE
sudo tee /etc/apt/apt.conf.d/99forcetls12 >/dev/null <<'EOF'
Acquire::https::CaInfo "/etc/ssl/certs/ca-certificates.crt";
Acquire::https::SslForceVersion "TLSv1.2";
EOF


curl -v --tlsv1.2 --tls-max 1.2 https://google.com


sudo nano /etc/ssl/openssl.cnf
At the bottom, add (or edit existing [system_default_sect]):


[system_default_sect]
MinProtocol = TLSv1.2
MaxProtocol = TLSv1.2
Save and exit, then refresh dynamic configs:


sudo update-ca-certificates


4. Quick test with stunnel (cleanest way without recompiling)

Install stunnel:

sudo apt-get install stunnel4


Create /etc/stunnel/apt-tls12.conf:

# /etc/stunnel/tls12-proxy.conf
client = yes
foreground = yes
pid = /var/run/stunnel-tls12.pid
debug = 7
output = /dev/stdout
sslVersion = TLSv1.2

[tls12-proxy]
accept  = 0.0.0.0:443
connect = %h:%p


Run:

sudo stunnel /etc/stunnel/apt-tls12.conf


Then tell apt to use it:
# nano /etc/apt/apt.conf.d/99forcetls12
Acquire::https::Proxy "http://127.0.0.1:8443/";


Install:

sudo apt-get install squid-openssl


Edit /etc/squid/squid.conf and add:

acl SSL_ports port 443
acl Safe_ports port 80
acl Safe_ports port 443
http_access allow all

# force TLS 1.2 upstream
tls_outgoing_options min=1.2 max=1.2


Restart:

sudo systemctl restart squid


Point apt to it:

Acquire::https::Proxy "http://127.0.0.1:3128/";

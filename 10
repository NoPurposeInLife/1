1. PowerShell (Recommended)

This method works on all modern Windows Server versions (2012 → 2025).

Get-ItemProperty HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\* ,
                 HKLM:\Software\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\* |
Select-Object DisplayName, DisplayVersion, InstallDate |
Where-Object { $_.DisplayName -and $_.DisplayVersion } |
Sort-Object DisplayName


Output fields:

DisplayName → App name

DisplayVersion → Installed version

InstallDate → Date in YYYYMMDD format

If you want to export it:

... | Export-Csv "C:\installed_apps.csv" -NoTypeInformation
################################################

# Collect installed programs from Registry (32 & 64 bit)
$regPaths = @(
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\*",
    "HKLM:\Software\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*"
)

$guidPattern = '^\{[0-9A-Fa-f\-]{36}\}$'

$regApps = Get-ItemProperty $regPaths -ErrorAction SilentlyContinue |
    Where-Object {
        $_.DisplayName -and
        ($_.DisplayName -notmatch $guidPattern) -and
        ($_.PSChildName -notmatch $guidPattern)
    } |
    Select-Object @{n='Name';e={$_.DisplayName.Trim()}},
                  @{n='Version';e={$_.DisplayVersion}},
                  @{n='Install Date';e={
                      if ($_.InstallDate -match '^\d{8}$') {
                          [datetime]::ParseExact($_.InstallDate,'yyyyMMdd',$null).ToString('yyyy-MM-dd')
                      } else { '' }
                  }}

# Collect Windows Store / AppX apps
$storeApps = Get-AppxPackage |
    Select-Object @{n='Name';e={
                        ($_.Name -replace 'Microsoft\.','' -replace '_.*','').Trim()
                    }},
                  @{n='Version';e={$_.Version}},
                  @{n='Install Date';e={
                      if ($_.InstallLocation -and (Test-Path $_.InstallLocation)) {
                          (Get-Item $_.InstallLocation).CreationTime.ToString('yyyy-MM-dd')
                      } else { '' }
                  }}

# Collect folders in Program Files & Program Files (x86)
$folders = @("$env:ProgramFiles", "$env:ProgramFiles(x86)")
$folderApps = foreach ($path in $folders) {
    if (Test-Path $path) {
        Get-ChildItem -Path $path -Directory -ErrorAction SilentlyContinue | ForEach-Object {
            if ($_.Name -notmatch $guidPattern) {
                $exe = Get-ChildItem -Path $_.FullName -Filter *.exe -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1
                if ($exe) {
                    $ver = (Get-Item $exe.FullName).VersionInfo
                    [PSCustomObject]@{
                        Name = $_.Name
                        Version = $ver.ProductVersion
                        'Install Date' = (Get-Item $_.FullName).CreationTime.ToString('yyyy-MM-dd')
                    }
                }
            }
        }
    }
}

# Merge all, sort, and deduplicate
$allApps = $regApps + $storeApps + $folderApps | Sort-Object Name -Unique

# Export as TSV (tab-separated, preserves tabs)
$path = "C:\AllInstalledApps.tsv"
$allApps | ForEach-Object {
    "$($_.Name)`t$($_.Version)`t$($_.'Install Date')"
} | Out-File -FilePath $path -Encoding UTF8

Write-Host "`nSaved clean results to $path"
Write-Host "→ Open in Notepad, then copy & paste into Word."
Write-Host "→ In Word: Insert → Table → Convert Text to Table → Tabs as separator."
